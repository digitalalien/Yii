{"ts":1363115520923,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * This file contains constants and shortcut functions that are commonly used.\n * Please only include functions are most widely used because this file\n * is included for every request. Functions are less often used are better\n * encapsulated as static methods in helper classes that are loaded on demand.\n */\n/**\n * This is the shortcut to DIRECTORY_SEPARATOR\n */\ndefined('DS') or define('DS', DIRECTORY_SEPARATOR);\n\n/**\n * This is the shortcut to Yii::app()->clientScript->registerCssFile\n */\nfunction regCssFile($files, $url = 'css', $addBaseUrl = true)\n{\n\tif (!is_array($files))\n\t\t$files = array($files);\n\tforeach ($files as $file)\n\t{\n\t\t$file = ($addBaseUrl) ? bu($url) . '/' . $file . '.css' : $url . '/' . $file . '.css';\n\t\tcs()->registerCssFile($file);\n\t}\n}\n\n/**\n * This is the shotcut to Yii::app()->clientScript->registerCoreScript\n */\nfunction regCoreFile($files)\n{\n\tif (!is_array($files))\n\t\t$files = array($files);\n\tforeach ($files as $file)\n\t\tcs()->registerCoreScript($file);\n}\n\n/**\n * This is the shortcut to Yii::app()->clientScript->registerScriptFile\n */\nfunction regJsFile($files, $url = 'js', $pos = CClientScript::POS_HEAD)\n{\n\tif (!is_array($files))\n\t\t$files = array($files);\n\tforeach ($files as $file)\n\t\tcs()->registerScriptFile(bu($url) . '/' . $file . '.js', $pos);\n}\n\n/**\n * Shortcut to display Icon image\n * @param string $img image file\n * @param string $size\n * @param string $options\n */\nfunction icon($img, $size = '48', $options = array())\n{\n\treturn img(bu('/images/icons/' . $size . '/' . $img), '', $size, null, $options);\n}\n\n/**\n * Displays a variable.\n * This method achieves the similar functionality as var_dump and print_r\n * but is more robust when handling complex objects such as Yii controllers.\n * @param mixed variable to be dumped\n * @param integer maximum depth that the dumper should go into the variable. Defaults to 10.\n * @param boolean whether the result should be syntax-highlighted\n */\nfunction dump($target, $depth=10, $highlight = true)\n{\n\techo CVarDumper::dumpAsString($target, $depth, $highlight);\n}\n\n/**\n * This is the shortcut to CHtml::encode\n */\nfunction h($text, $limit = 0)\n{\n\tif ($limit && strlen($text) > $limit && ($pos = strrpos(substr($text, 0, $limit), ' ')) !== false)\n\t\t$text = substr($text, 0, $pos) . ' ...';\n\treturn htmlspecialchars($text, ENT_QUOTES, Yii::app()->charset);\n}\n\n/**\n * This is the shortcut to nl2br(CHtml::encode())\n * @param string the text to be formatted\n * @param integer the maximum length of the text to be returned. If 0, it means no truncation.\n * @param string the label of the \"read more\" button if $limit is greater than 0.\n * Set this to be false if the \"read more\" button should not be displayed.\n * @return string the formatted text\n */\nfunction nh($text, $limit = 0, $readMore = 'read more')\n{\n\tif ($limit && strlen($text) > $limit)\n\t{\n\t\tif (($pos = strpos($text, ' ', $limit)) !== false)\n\t\t\t$limit = $pos;\n\t\t$ltext = substr($text, 0, $limit);\n\t\tif ($readMore !== false)\n\t\t{\n\t\t\t$rtext = substr($text, $limit);\n\t\t\treturn nl2br(htmlspecialchars($ltext, ENT_QUOTES, Yii::app()->charset))\n\t\t\t\t. ' ' . l(h($readMore), '#', array('class' => 'read-more', 'onclick' => '$(this).hide().next().show(); return false;'))\n\t\t\t\t. '<span style=\"display:none;\">'\n\t\t\t\t. nl2br(htmlspecialchars($rtext, ENT_QUOTES, Yii::app()->charset))\n\t\t\t\t. '</span>';\n\t\t}\n\t\telse\n\t\t\treturn nl2br(htmlspecialchars($ltext . ' ...', ENT_QUOTES, Yii::app()->charset));\n\t}\n\telse\n\t\treturn nl2br(htmlspecialchars($text, ENT_QUOTES, Yii::app()->charset));\n}\n\n/**\n * This is the shortcut to CHtmlPurifier::purify().\n */\nfunction ph($text)\n{\n\tstatic $purifier;\n\tif ($purifier === null)\n\t\t$purifier = new CHtmlPurifier;\n\treturn $purifier->purify($text);\n}\n\n/**\n * Converts a markdown text into purified HTML\n */\nfunction mh($text)\n{\n\tstatic $parser;\n\tif ($parser === null)\n\t\t$parser = new MarkdownParser;\n\treturn $parser->safeTransform($text);\n}\n\n/**\n * This is the shortcut to CHtml::link()\n */\nfunction l($text, $url = '#', $htmlOptions = array())\n{\n\treturn CHtml::link($text, $url, $htmlOptions);\n}\n\n/**\n * Generates an image tag.\n * @param string $url the image URL\n * @param string $alt the alt text for the image. Images should have the alt attribute, so at least an empty one is rendered.\n * @param integer the width of the image. If null, the width attribute will not be rendered.\n * @param integer the height of the image. If null, the height attribute will not be rendered.\n * @param array additional HTML attributes (see {@link tag}).\n * @return string the generated image tag\n */\nfunction img($url, $alt = '', $width = null, $height = null, $htmlOptions = array())\n{\n\t$htmlOptions['src'] = $url;\n\tif ($alt !== null)\n\t\t$htmlOptions['alt'] = $alt;\n\telse\n\t\t$htmlOptions['alt'] = '';\n\tif ($width !== null)\n\t\t$htmlOptions['width'] = $width;\n\tif ($height !== null)\n\t\t$htmlOptions['height'] = $height;\n\treturn CHtml::tag('img', $htmlOptions);\n}\n\n/**\n * This is the shortcut to Yii::t().\n * Note that the category parameter is removed from the function.\n * It defaults to 'application'. If a different category needs to be specified,\n * it should be put as a prefix in the message, separated by '|'.\n * For example, t('backend|this is a test').\n */\nfunction t($message, $params = array(), $source = null, $language = null)\n{\n\tif (($pos = strpos($message, '|')) !== false)\n\t{\n\t\t$category = substr($message, 0, $pos);\n\t\t$message = substr($message, $pos + 1);\n\t}\n\telse\n\t\t$category = 'application';\n\treturn Yii::t($category, $message, $params, $source, $language);\n}\n\n/**\n * This is the shortcut to Yii::app()->createUrl()\n */\nfunction url($route, $params = array(), $ampersand = '&')\n{\n\treturn Yii::app()->getUrlManager()->createUrl($route, $params, $ampersand);\n}\n\n/**\n * This is the shortcut to Yii::app()->request->baseUrl\n * If the parameter is given, it will be returned and prefixed with the app baseUrl.\n */\nfunction bu($url = '')\n{\n\tstatic $baseUrl;\n\tif ($baseUrl === null)\n\t\t$baseUrl = Yii::app()->request->baseUrl;\n\treturn $baseUrl . '/' . ltrim($url, '/');\n}\n\n/**\n * Returns the named application parameter.\n * This is the shortcut to Yii::app()->params[$name].\n */\nfunction param($name)\n{\n\treturn Yii::app()->params[$name];\n}\n\n/**\n * This is the shortcut to Yii::app()->user.\n * @return WebUser\n */\nfunction user()\n{\n\treturn Yii::app()->user;\n}\n\n/**\n * This is the shortcut to Yii::app()\n * @return CWebApplication\n */\nfunction app()\n{\n\treturn Yii::app();\n}\n\n/**\n * This is the shortcut to Yii::app()->clientScript\n * @return CClientScript\n */\nfunction cs()\n{\n\treturn Yii::app()->clientScript;\n}\n\n/**\n * This is the shortcut to Yii::app()->db\n * @return CDbConnection\n */\nfunction db()\n{\n\treturn Yii::app()->db;\n}\n\n/**\n * This is the shortcut to Yii::app()->getRequest\n * @return CHttpRequest object\n */\nfunction r()\n{\n\treturn Yii::app()->getRequest();\n}\n\n/**\n * This is the shortcut to Yii::app()->user->checkAccess().\n */\nfunction allow($operation, $params = array(), $allowCaching = true)\n{\n\treturn Yii::app()->user->checkAccess($operation, $params, $allowCaching);\n}\n\n/**\n * Ensures the current user is allowed to perform the specified operation.\n * An exception will be thrown if not.\n * This is similar to {@link access} except that it does not return value.\n */\nfunction ensureAllow($operation, $params = array(), $allowCaching = true)\n{\n\tif (!Yii::app()->user->checkAccess($operation, $params, $allowCaching))\n\t\tthrow new CHttpException(403, Yii::t('error','You are not allowed to perform this operation.'));\n\treturn true;\n}\n\n/**\n * Shortcut to Yii::app()->format (utilities for formatting structured text)\n */\nfunction format()\n{\n\treturn Yii::app()->format;\n}\n\n/**\n * Shortcut for json_encode\n * NOTE: json_encode exists in PHP > 5.2, so it's safe to use it directly without checking\n * @param array $json the PHP array to be encoded into json array\n * @param int $opts Bitmask consisting of JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_FORCE_OBJECT.\n */\nfunction je($json, $opts=null)\n{\n\t//return function_exists('json_encode')? json_encode($json) : CJSON::encode($json);\n\treturn json_encode($json, $opts);\n}\n\n/**\n * Shortcut for json_decode\n * NOTE: json_encode exists in PHP > 5.2, so it's safe to use it directly without checking\n * @param string $json the PHP array to be decoded into json array\n * @param bool $assoc when true, returned objects will be converted into associative arrays.\n * @param int $depth User specified recursion depth.\n * @param int $opts Bitmask of JSON decode options. \n *\tCurrently only JSON_BIGINT_AS_STRING is supported \n *\t(default is to cast large integers as floats)\n */\nfunction jd($json, $assoc=null, $depth=512, $opts=0)\n{\n\treturn json_decode($json, $assoc, $depth);\n}\n\n/**\n * Adds trailing dots to a string if exceeds the length specified\n * @param string $txt the text to cut\n * @param integer $length the length\n * @param string $encoding the encoding type if multibyte, null otherwise\n * @return string \n */\nfunction trail($txt, $length, $encoding = 'utf-8')\n{\n\tif (strlen($txt) > $length)\n\t{\n\t\tif (null != $encoding)\n\t\t{\n\t\t\t$txt = mb_substr($txt, 0, $length - 3, $encoding);\n\t\t\t$pos = mb_strrpos($txt, ' ', null, $encoding);\n\t\t\t$txt = mb_substr($txt, 0, $pos, $encoding) . '...';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$txt = substr($txt, 0, $length - 3);\n\t\t\t$pos = strrpos($txt, ' ');\n\t\t\t$txt = substr($txt, 0, $pos) . '...';\n\t\t}\n\t}\n\treturn $txt;\n}\n\n/**\n * Email obfuscator script 2.1 by Tim Williams, University of Arizona.\n * Random encryption key feature by Andrew Moulden, Site Engineering Ltd\n * PHP version coded by Ross Killen, Celtic Productions Ltd\n * This code is freeware provided these six comment lines remain intact\n * A wizard to generate this code is at http://www.jottings.com/obfuscator/\n * The PHP code may be obtained from http://www.celticproductions.net/\\n\\n\";\n * \n * @param string $address the email address to obfuscate\n * @return string \n */\nfunction obfuscateEmail($address)\n{\n\t$address = strtolower($address);\n\t$coded = \"\";\n\t$unmixedkey = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.@\";\n\t$inprogresskey = $unmixedkey;\n\t$mixedkey = \"\";\n\t$unshuffled = strlen($unmixedkey);\n\tfor ($i = 0; $i <= strlen($unmixedkey); $i++)\n\t{\n\t\t$ranpos = rand(0, $unshuffled - 1);\n\t\t$nextchar = substr($inprogresskey, $ranpos, 1);\n\t\t$mixedkey .= $nextchar;\n\t\t$before = substr($inprogresskey, 0, $ranpos);\n\t\t$after = substr($inprogresskey, $ranpos + 1, $unshuffled - ($ranpos + 1));\n\t\t$inprogresskey = $before . '' . $after;\n\t\t$unshuffled -= 1;\n\t}\n\t$cipher = $mixedkey;\n\n\t$shift = strlen($address);\n\n\t$txt = \"<script type=\\\"text/javascript\\\" language=\\\"javascript\\\">\\n\" .\n\t\t\"<!-\" . \"-\\n\";\n\n\tfor ($j = 0; $j < strlen($address); $j++)\n\t{\n\t\tif (strpos($cipher, $address{$j}) == -1)\n\t\t{\n\t\t\t$chr = $address{$j};\n\t\t\t$coded .= $chr;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$chr = (strpos($cipher, $address{$j}) + $shift) % strlen($cipher);\n\t\t\t$coded .= $cipher{$chr};\n\t\t}\n\t}\n\n\n\t$txt .= \"\\ncoded = \\\"\" . $coded . \"\\\"\\n\" .\n\t\t\"  key = \\\"\" . $cipher . \"\\\"\\n\" .\n\t\t\"  shift=coded.length\\n\" .\n\t\t\"  link=\\\"\\\"\\n\" .\n\t\t\"  for (i=0; i<coded.length; i++) {\\n\" .\n\t\t\"    if (key.indexOf(coded.charAt(i))==-1) {\\n\" .\n\t\t\"      ltr = coded.charAt(i)\\n\" .\n\t\t\"      link += (ltr)\\n\" .\n\t\t\"    }\\n\" .\n\t\t\"    else {     \\n\" .\n\t\t\"      ltr = (key.indexOf(coded.charAt(i))-\nshift+key.length) % key.length\\n\" .\n\t\t\"      link += (key.charAt(ltr))\\n\" .\n\t\t\"    }\\n\" .\n\t\t\"  }\\n\" .\n\t\t\"document.write(\\\"<a href='mailto:\\\"+link+\\\"'>\\\"+link+\\\"</a>\\\")\\n\" .\n\t\t\"\\n\" .\n\t\t\"//-\" . \"->\\n\" .\n\t\t\"<\" . \"/script><noscript>N/A\" .\n\t\t\"<\" . \"/noscript>\";\n\treturn $txt;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":11546}]],"length":11546}
